@import 'mixins/hide';

.menu-container {
  display: inline-block;
  overflow-y: hidden;
  padding: 0;
  margin: 0;
  input[type=checkbox].toggle-menu-visible {
    @include visuallyhidden;
    & + label {
      @include icon-button($fa-var-bars);
      position: absolute;
    }
    &:checked + label {
      z-index: 10;
      color: #333;
      @include icon($fa-var-caret-square-o-left);
    }

    & + label + .menu-content {
      display: none;
      z-index: 1;
    }
    &:checked ~ .menu-content {
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      background-color: rgba(255, 255, 255, 0.9);;
    }
  }

  .menu-content-inner {
    overflow-y: scroll;
    height: 100%;
    /* This asserts that menu items won't be
     * hidden by apply button if a scroll bar
     * becomes visible */
    &:after {
      content: "";
      display: block;
      height: 10%;
      min-height: 20px;
    }
  }

  @mixin load-store-btn {
    background-color: #eee;
    border-color: #555;
    border-style: solid;
    border-width: 1px;
    border-radius: 5px;
    padding: 5px;
    font-size: 1em;
    margin: 5px;
    &:focus,
    &:hover {
      background-color: #fff;
    }
  }
  .menu-btn-importstate {
    @include load-store-btn
    & > input[type="file"] {
      @include visuallyhidden;
    }
  }
  .menu-btn-exportstate {
    @include load-store-btn
  }
  .menu-btn-resetstate {
    @include load-store-btn
  }
  
  .menu-btn-apply {
    display: block;
    position: absolute;
    height: 10%;
    min-height: 20px;
    width: 100%;
    bottom: 0;
    border: none;
    background-color: #5CB85C;
    color: #eee;
    cursor: pointer;
    &[disabled] {
      cursor: not-allowed;
    }
    font-size: 110%;
    &:hover,
    &:focus {
      background-color: #449D44;
    }
    &[disabled] {
       &:hover,
        &:focus {
          background-color: #5CB85C;
        }
    }
  }
}

@mixin menu-responsiveness($icon-btn-font-size, $button-edge-dist, $menu-width) {
  .menu-container {
    .menu-content {
      width: $menu-width;
    }
    input[type=checkbox].toggle-menu-visible {
      & + label {
        font-size: $icon-btn-font-size;;
        top: $button-edge-dist;
        left: $button-edge-dist;
      }
      &:checked + label {
        left: $menu-width;
        transform: translateX(-100%);
        margin-left: -$button-edge-dist;
      }
    }
    .menu-content-inner {
      /* Vertical padding is not allowed
       * because we only have the space
       * between top and apply button */
      padding: 0 $button-edge-dist;
      /* but we can fake with :before and :after */
      &:before {
        content: "";
        display: block;
        margin-bottom: $button-edge-dist;
      }
      &:after {
        content: "";
        display: block;
        margin-top: $button-edge-dist;
      }
    }
  }
}
